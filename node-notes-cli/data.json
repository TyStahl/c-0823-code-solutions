{
  "nextId": 45,
  "notes": {
    "11": "The event loop is how a JavaScript runtime pushes asynchronous callbacks onto the stack once the stack is cleared.",
    "19": "Prototypal inheritance is how JavaScript objects delegate behavior.",
    "32": "In JavaScript, the value of `this` is determined when a function is called; not when it is defined.",
    "34": "A closure is formed when a function retains access to variables in its lexical scope.",
    "40": "I hope I didnt screw this up",
    "41": "I making a new note and hoping the object in datajson is indented nicely.",
    "42": "",
    "43": "i am writing a new note and hoping i didnt ruin it",
    "44": "another note written as a test case"
  }
}
